diff --git a/server.py b/server.py
index 331883f..14db9ba 100644
--- a/server.py
+++ b/server.py
@@ -55,43 +55,6 @@ class ErrorHandler(tornado.web.RequestHandler):
         self.send_error(status_code=403)
 
 
-class WebSocket(tornado.websocket.WebSocketHandler):
-
-    def on_message(self, message):
-        """Evaluates the function pointed to by json-rpc."""
-
-        # Start an infinite loop when this is called
-        if message == "read_camera":
-            if not args.require_login or self.get_secure_cookie(COOKIE_NAME):
-                self.camera_loop = PeriodicCallback(self.loop, 10)
-                self.camera_loop.start()
-            else:
-                print("Unauthenticated websocket request")
-
-        # Extensibility for other methods
-        else:
-            print("Unsupported function: " + message)
-
-    def loop(self):
-        """Sends camera images in an infinite loop."""
-        try:
-            sio = io.BytesIO() # for Python3
-        except AttributeError:
-            sio = io.StringIO()  # for Python2
-
-        if args.use_usb:
-            _, frame = camera.read()
-            img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))
-            img.save(sio, "JPEG")
-        else:
-            camera.capture(sio, "jpeg", use_video_port=True)
-
-        try:
-            self.write_message(base64.b64encode(sio.getvalue()))
-        except tornado.websocket.WebSocketClosedError:
-            self.camera_loop.stop()
-
-
 parser = argparse.ArgumentParser(description="Starts a webserver that "
                                  "connects to a webcam.")
 parser.add_argument("--port", type=int, default=8000, help="The "
@@ -106,33 +69,10 @@ parser.add_argument("--usb-id", type=int, default=0, help="The "
                      "usb camera number to display")
 args = parser.parse_args()
 
-if args.use_usb:
-    import cv2
-    from PIL import Image
-    camera = cv2.VideoCapture(args.usb_id)
-else:
-    import picamera
-    camera = picamera.PiCamera()
-    camera.start_preview()
-
-resolutions = {"high": (1280, 720), "medium": (640, 480), "low": (320, 240)}
-if args.resolution in resolutions:
-    if args.use_usb:
-        w, h = resolutions[args.resolution]
-        camera.set(3, w)
-        camera.set(4, h)
-    else:
-        camera.resolution = resolutions[args.resolution]
-else:
-    raise Exception("%s not in resolution options." % args.resolution)
-
 handlers = [(r"/", IndexHandler), (r"/login", LoginHandler),
-            (r"/websocket", WebSocket),
             (r"/static/password.txt", ErrorHandler),
             (r'/static/(.*)', tornado.web.StaticFileHandler, {'path': ROOT})]
 application = tornado.web.Application(handlers, cookie_secret=PASSWORD)
 application.listen(args.port)
 
-webbrowser.open("http://localhost:%d/" % args.port, new=2)
-
 tornado.ioloop.IOLoop.instance().start()
